#!/bin/sh
#postinst
#change ports if needed
#keep existing LE-certificates if exists
#keep cronjob for renewal if existed
#pre-calculate keys if missing

echo "Preparing files and directories..."
# create needed folder for letsencrypt initial setup files
[ -d /config/letsencrypt/ ] || mkdir -p /config/letsencrypt/

if [ ! -d "/var/log/lighttpd_custom" ]; then
    mkdir /var/log/lighttpd_custom
    chown www-data:www-data /var/log/lighttpd_custom
fi

# if its not already created, create cronjob for LE
if [ ! -f "/etc/cron.monthly/letsrenew.sh" ]; then
        ln -sf /config/letsencrypt/letsrenew.sh /etc/cron.monthly/letsrenew.sh
fi

# start with permissions, ignore errors
chmod 755 /config/letsencrypt/acme_tiny.py
chmod 755 /config/letsencrypt/letsrenew.sh
chmod 755 /config/letsencrypt/repair.sh
chmod 755 /config/scripts/port_81.sh
chmod 755 /config/scripts/port_8443.sh
chmod 755 /config/custom/bin/ip2dns

# change original webserver http-port from 80 to 81
if [ $(grep "http-port 80" /config/config.boot | wc -l) -eq 1 ]; then
    echo "Changing http-port from 80 to 81..."
    /config/scripts/port_81.sh
fi
# change original webserver https-port from 443 to 8443
# CPO: really needed? acme-chellange and cgi-status.php could be served without https:443 as well.
# custom-https-port is configured in /config/custom/lighttpd/conf-enabled/10-ssl.conf in following lines (3x: ipv4, ipv6, url.redirect)
# $SERVER["socket"] == "0.0.0.0:443" {
# $SERVER["socket"] == "[0::0]:443" {
#                         "^(.*)$" => "https://%1:443$1"
#
# on order to allow original webserver to stay on port 443, all 3 lines on custom 10-ssl.conf need to be changed to i.e. to port 8443.
if [ $(grep "https-port 443" /config/config.boot | wc -l) -eq 1 ]; then
    echo "Changing https-port from 443 to 8443..."
    /config/scripts/port_8443.sh
fi

# reestablish server.pem with RSA key if possible
chmod +w /etc/lighttpd/server.pem
if [ -f "/config/letsencrypt/signed.crt" ] && [ ! $(stat -c %s /config/letsencrypt/signed.crt) -eq 0 ] &&
   [ -f "/config/letsencrypt/domain.key" ] && [ ! $(stat -c %s /config/letsencrypt/domain.key) -eq 0 ]
then
  cat /config/letsencrypt/signed.crt | tee /etc/lighttpd/server.pem
  cat /config/letsencrypt/domain.key | tee -a /etc/lighttpd/server.pem
elif
  # if not, recover original server.pem if possible
  if [ -f "/config/letsencrypt/original_server.pem" ]; then
    echo "Recovering original server.pem file..."
    cp /config/letsencrypt/original_server.pem /etc/lighttpd/server.pem
  fi
fi

echo "Fire up original webserver..."
# start original EdgeOS webserver
sudo /sbin/start-stop-daemon --start --quiet \
        --pidfile /var/run/lighttpd.pid \
        --exec /usr/sbin/lighttpd -- -f /etc/lighttpd/lighttpd.conf

echo "Fire up custom webserver"
# start custom script webserver
sudo /sbin/start-stop-daemon --start --quiet \
        --pidfile /var/run/lighttpd_custom.pid \
        --exec /usr/sbin/lighttpd -- -f /config/custom/lighttpd/lighttpd_custom.conf

## calculate keys of not already there (could be done offline)
if [ ! -f "/config/letsencrypt/account.key" ] || [ $(stat -c %s /config/letsencrypt/account.key) -eq 0 ]; then
    echo "Calculating account-key: this could take a minute or two..."
    openssl genrsa 4096 | tee /config/letsencrypt/account.key
fi
if [ ! -f "/config/letsencrypt/domain.key" ] || [ $(stat -c %s /config/letsencrypt/domain.key) -eq 0 ]; then
    echo "Calculating domain-key: this could take a minute or two..."
    openssl genrsa 4096 | tee /config/letsencrypt/domain.key
fi

echo "postinst installation finished"

exit 0
