#!/bin/sh
#postinst
#change ports if needed
#keep existing LE-certificates if exists
#keep cronjob for renewal if existed
#pre-calculate keys if missing

echo "Preparing files and directories..."
# create needed folder for letsencrypt initial setup files
[ -d /config/letsencrypt/ ] || mkdir -p /config/letsencrypt/

if [ ! -d "/var/log/lighttpd_custom" ]; then
    mkdir /var/log/lighttpd_custom
    chown www-data:www-data /var/log/lighttpd_custom
fi

# if its not already created, create cronjob for LE
if [ ! -f "/etc/cron.monthly/letsrenew.sh" ]; then
        ln -sf /config/letsencrypt/letsrenew.sh /etc/cron.monthly/letsrenew.sh
fi

# establish config from default, if missing - avoid killing a custom setting
if [ ! -f "/config/custom/www/settings.inc" ]; then
        cp /config/custom/www/settings_default.inc /config/custom/www/settings.inc
fi
rm -f /config/custom/www/settings_default.inc

# establish config from default, if missing - avoid killing custom https-port setting
if [ ! -f "/config/custom/lighttpd/conf-enabled/10-ssl.conf" ]; then
        cp /config/custom/lighttpd/conf-enabled/10-ssl_default.conf /config/custom/lighttpd/conf-enabled/10-ssl.conf
fi
rm -f cp /config/custom/lighttpd/conf-enabled/10-ssl_default.conf


# start with permissions, ignore errors
chmod 755 /config/letsencrypt/acme_tiny.py
chmod 755 /config/letsencrypt/letsrenew.sh
chmod 755 /config/letsencrypt/repair.sh
chmod 755 /config/scripts/port_81.sh
chmod 755 /config/scripts/port_8443.sh
chmod 755 /config/custom/bin/ip2dns

# change original webserver http-port from 80 to 81
# CPO: custom server MUST run on port http:80 for LetsEncrypt verification
# only if custom port config is http:80 by now
customhttpport=80
if [ $(grep -iE 'server.port.{0,4}=.{0,4}'$customhttpport /config/custom/lighttpd/conf-enabled/10-ssl.conf | wc -l) -eq 1 ] &&
   [ $(grep -iE '\]:'$customhttpport'"' /config/custom/lighttpd/conf-enabled/10-ssl.conf | wc -l) -eq 1 ] &&
   [ $(grep "http-port 80" /config/config.boot | wc -l) -eq 1 ]; then
    echo "Changing http-port from 80 to 81..."
    /config/scripts/port_81.sh
fi
# change original webserver https-port from 443 to 8443
# only if custom port config is https:443 by now
customhttpsport=443
if [ $(grep -iE ':'$customhttpsport'"' /config/custom/lighttpd/conf-enabled/10-ssl.conf | wc -l) -eq 2 ] &&
   [ $(grep -iE ':'$customhttpsport'\$1"' /config/custom/lighttpd/conf-enabled/10-ssl.conf | wc -l) -eq 1 ] &&
   [ $(grep "https-port 443" /config/config.boot | wc -l) -eq 1 ]; then
    echo "Changing https-port from 443 to 8443..."
    /config/scripts/port_8443.sh
fi

# reestablish server.pem with RSA key if possible
chmod +w /etc/lighttpd/server.pem
if [ -f "/config/letsencrypt/signed.crt" ] && [ ! $(stat -c %s /config/letsencrypt/signed.crt) -eq 0 ] &&
   [ -f "/config/letsencrypt/domain.key" ] && [ ! $(stat -c %s /config/letsencrypt/domain.key) -eq 0 ]
then
  cat /config/letsencrypt/signed.crt | tee /etc/lighttpd/server.pem
  cat /config/letsencrypt/domain.key | tee -a /etc/lighttpd/server.pem
elif [ -f "/config/letsencrypt/original_server.pem" ]; then
  # if not, recover original server.pem if possible
  echo "Recovering original server.pem file..."
  cp /config/letsencrypt/original_server.pem /etc/lighttpd/server.pem
fi

echo "Fire up original webserver..."
# start original EdgeOS webserver
sudo /sbin/start-stop-daemon --start --quiet \
        --pidfile /var/run/lighttpd.pid \
        --exec /usr/sbin/lighttpd -- -f /etc/lighttpd/lighttpd.conf

echo "Fire up custom webserver"
# start custom script webserver
sudo /sbin/start-stop-daemon --start --quiet \
        --pidfile /var/run/lighttpd_custom.pid \
        --exec /usr/sbin/lighttpd -- -f /config/custom/lighttpd/lighttpd_custom.conf

## calculate keys of not already there (could be done offline and in backgroud)
calcscript="/config/letsencrypt/calc.sh"
# an interrupted calculation (force-reboot) was already cleaned from preinst
# existing calc-script at this moment must be "active"
if [ -f $calcscript ]; then
    echo "Looks like calculation of keys is already in progress..."
else
    if [ ! -f "/config/letsencrypt/account.key" ] || [ $(stat -c %s /config/letsencrypt/account.key) -eq 0 ]; then
        echo "Schedule account-key generation..."
        echo "#!/bin/sh" >$calcscript
        echo "openssl genrsa 4096 | tee /config/letsencrypt/account_tmp.key" >>$calcscript
        echo "cp    /config/letsencrypt/account_tmp.key /config/letsencrypt/account.key"  >>$calcscript
        echo "rm -f /config/letsencrypt/account_tmp.key"  >>$calcscript
    fi
    if [ ! -f "/config/letsencrypt/domain.key" ] || [ $(stat -c %s /config/letsencrypt/domain.key) -eq 0 ]; then
        echo "Schedule domain-key generation..."
        if [ ! -f $calcscript ]; then
            echo "#!/bin/sh" >$calcscript
        fi
        echo "openssl genrsa 4096 | tee /config/letsencrypt/domain_tmp.key" >>$calcscript
        echo "cp    /config/letsencrypt/domain_tmp.key /config/letsencrypt/domain.key"  >>$calcscript
        echo "rm -f /config/letsencrypt/domain_tmp.key"  >>$calcscript
    fi
    if [ -f $calcscript ]; then
        echo "rm -f "$(dirname $calcscript)"/nohup.out"  >>$calcscript
        echo "rm -f "$(dirname $calcscript)"calc.sh"  >>$calcscript
        chmod 755 $calcscript
        echo "triggering openssl calculation in backgroud..."
        nohup $calcscript &
    fi
fi
echo "postinst installation finished"

exit 0
